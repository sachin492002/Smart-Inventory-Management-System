# -*- coding: utf-8 -*-
"""Inventory_LR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hHXZ4A8JLzH8sC7v3r_9jBS9mSLrSy5l
"""


import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from matplotlib import pyplot
from pandas import DataFrame
import os

from statsmodels.tsa.stattools import adfuller
from pmdarima import auto_arima
from pandas.plotting import autocorrelation_plot

from sklearn.metrics import mean_squared_error
from math import sqrt

from statsmodels.tsa.arima.model import ARIMA
import joblib

# inventory_df = pd.read_csv('random_data.csv')
# inventory_df['created_at'] = pd.to_datetime(inventory_df['created_at'])
# df = inventory_df.set_index(['created_at'])
# df = df.drop(columns=['entry_id'], axis=1)
#
# plt.figure(figsize=(12,5))
# plt.title("Price Distribution Graph")
# ax = sns.distplot(df["field2"], color='y')
#
# def ad_test(dataset):
#     dftest = adfuller(dataset, autolag='AIC')
#     print("1. ADF : ", dftest[0])
#     print("2. P-Value : ", dftest[1])
#     print("3. Num Of Lags : ", dftest[2])
#     print("4. Num Of Observations Used For ADF Regression:", dftest[3])
#     print("5. Critical Values :")
#     for key, val in dftest[4].items():
#         print("\t", key, ": ", val)
#
# ad_test(df['field2'])
#
# stepwise_fit = auto_arima(df['field2'], trace=True, suppress_warnings=True)
#
# model = ARIMA(df['field2'], order=(3, 2, 1))
# model_fit = model.fit()
#
#
# joblib.dump(model_fit, 'Inventorymanagement/Inventorymanagement/arima_model.pkl')
#

def predict_price_for_date(date):
    # Load the saved model
    loaded_model = joblib.load('Inventorymanagement/myapi/arima_model.pkl')
    # Predict the price for the given date
    prediction = loaded_model.predict(start = 1400, end = 1404, typ="levels").rename("ARIMA Predictions")
    return prediction

desired_date = '2024-05-03'
predicted_price = predict_price_for_date(desired_date)
print(f'Predicted price for {desired_date}: {predicted_price}')
